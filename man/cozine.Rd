% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cozine.R
\name{cozine}
\alias{cozine}
\title{COZINE model fit function (wrapper for HurdleNormal::fitHurdle)}
\usage{
cozine(dat, fixed = NULL, parallel = TRUE, lambda.min.ratio = 0.1, ...)
}
\arguments{
\item{dat}{A data frame or matrix of OTU/ASV counts.}

\item{fixed}{a data.frame of fixed covariates (to be conditioned upon). Passed to fitHurdle's fixed argument}

\item{parallel}{Logical, should parallel::mclapply be used in HurdleNormal::fitHurdle? Defaults to TRUE.
Note that fitHurdle does not allow you to pass a number of cores directly,
so the "MC_CORES" option will need to be set to parallelize (\code{options(MC_CORES=4)})}

\item{lambda.min.ratio}{minimum lambda ratio (as a function of lambda0, where}

\item{...}{Additional arguments passed to HurdleNormal::fitHurdle. By default control has debug=0 and keepNodePaths is set to TRUE.}
}
\value{
Returns a list with two elements
The first element "result" is a datafram with two columns. "Value" is the observed nominal assortivity of node x, "p.value" is the percentage of permuted scores below that value.
The second element, "null.value", is the list of permuted assortivity scores.
}
\description{
This will perform a centered log ratio transform with additional centering of the data, then fit a hurdle model to it per HurdleNormal::fitHurdle
}
\examples{
x <- 4
}
\keyword{assortivity}
\keyword{permutation}
\keyword{phylogeny}
